openapi: "3.0.3"
info:
  title: "HoneyMart API"
  description: "JSON api to deal with HoneyMart APP"
  version: "1.0.0"
servers:
- url: "https://com_the_chance_honey_mart"
paths:
  /:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
  /categories:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Category"
  /category:
    post:
      description: ""
      parameters:
      - name: "name"
        in: "query"
        required: false
        schema:
          type: "string"
      - name: "image"
        in: "query"
        required: false
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
        "201":
          description: "Created"
          content:
            '*/*':
              schema:
                type: "string"
  /category/{id}:
    delete:
      description: ""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "number"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                type: "string"
    put:
      description: ""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "number"
      - name: "name"
        in: "query"
        required: false
        schema:
          type: "string"
      - name: "image"
        in: "query"
        required: false
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                type: "string"
  /markets:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Market"
    post:
      description: ""
      parameters:
      - name: "name"
        in: "query"
        required: false
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
        "201":
          description: "Created"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Market"
  /markets/{id}:
    delete:
      description: ""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "number"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                type: "string"
    put:
      description: ""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "number"
      - name: "name"
        in: "query"
        required: false
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                type: "string"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Market"
  /products:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Product"
    post:
      description: ""
      parameters:
      - name: "name"
        in: "query"
        required: false
        schema:
          type: "string"
      - name: "price"
        in: "query"
        required: false
        schema:
          type: "string"
      - name: "quantity"
        in: "query"
        required: false
        schema:
          type: "string"
      responses:
        "201":
          description: "Created"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Product"
        "406":
          description: "Not Acceptable"
          content:
            '*/*':
              schema:
                type: "string"
  /products/{id}:
    delete:
      description: ""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "boolean"
        "406":
          description: "Not Acceptable"
          content:
            '*/*':
              schema:
                type: "string"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                type: "string"
    put:
      description: ""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "name"
        in: "query"
        required: false
        schema:
          type: "string"
      - name: "price"
        in: "query"
        required: false
        schema:
          type: "string"
      - name: "quantity"
        in: "query"
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "boolean"
        "406":
          description: "Not Acceptable"
          content:
            '*/*':
              schema:
                type: "string"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                type: "string"
  /json/kotlinx-serialization:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
components:
  schemas:
    Category:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        name:
          type: "string"
        image:
          type: "string"
    Market:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        name:
          type: "string"
    Product:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        name:
          type: "string"
        quantity:
          type: "string"
        price:
          type: "number"
          format: "double"